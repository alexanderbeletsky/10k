/*
 * JSMin
 * Javascript Compressor
 * http://www.crockford.com/
 * http://www.smallsharptools.com/Projects/Packer/
*/

// app.combined.js

function GitHub(){}
GitHub.prototype=(function(){var api='http://github.com/api/v2/json/';var callApi=function(m,error,callback){$.ajax({url:api+m,dataType:"jsonp",jsonpCallback:"jsoncallback",timeout:5000,success:function(r){callback(r);},error:function(x,t,e){error(x,t,e);},});}
var getForkedCount=function(repos){var count=0;$.each(repos,function(i,repo){if(repo.fork){count++;}});return count;}
var getMaxIssuesCount=function(repos){var maxIssues=0;$.each(repos,function(i,repo){var issuesInCurrentRepository=repo.open_issues;if(issuesInCurrentRepository>maxIssues){maxIssues=issuesInCurrentRepository;}});return maxIssues;}
var getMaxWatchers=function(repos){var maxWatchers=0;$.each(repos,function(i,repo){var watchersForCurrentRepository=repo.watchers;if(watchersForCurrentRepository>maxWatchers){maxWatchers=watchersForCurrentRepository;}});return maxWatchers;}
return{init:function(user,callback,error){var info={};callApi('user/show/'+user,error,function(r){info.name=r.user.name;info.gravatar=r.user.gravatar_id;info.repositories=r.user.public_repo_count;info.gists=r.user.public_gist_count;info.following=r.user.following_count;info.followed=r.user.followers_count;callApi('repos/watched/'+user,error,function(r){info.watchedRepositories=r.repositories.length;callApi('repos/show/'+user,error,function(r){info.forked=getForkedCount(r.repositories);info.issues=getMaxIssuesCount(r.repositories);info.watchers=getMaxWatchers(r.repositories);callback(info);});});});}};})();function Criteria(){}
Criteria.prototype=(function(){var criteria=function(badge,type,value,context,format,low,high){if(!high){high=value+1;}
if(value>=low&&value<high){context.badges.push({name:badge,type:type,info:format(value)});return true;}
return false;}
var init=function(type,info,options){var property=options[type].propertyName;var propertyValue=info[property];var low=options[type].low;var high=options[type].high;var format=options[type].format;return{badge:options.badge,value:propertyValue,format:format,low:low,high:high};}
var wooden=function(info,context,options){var input=init('wooden',info,options);return criteria(input.badge,'wooden',input.value,context,input.format,input.low,input.high);}
var bronze=function(info,context,options){var input=init('bronze',info,options);return criteria(input.badge,'bronze',input.value,context,input.format,input.low,input.high);}
var silver=function(info,context,options){var input=init('silver',info,options);return criteria(input.badge,'silver',input.value,context,input.format,input.low,input.high);}
var golden=function(info,context,options){var input=init('golden',info,options);return criteria(input.badge,'golden',input.value,context,input.format,input.low,input.high);}
return{applyForBadge:function(info,context,options){$.each([golden,silver,bronze,wooden],function(i,matcher){return!matcher(info,context,options);});}}})();function Watcher(){}
Watcher.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(watched){return'Watching '+watched+' repositories';}
options.badge='Watcher';options['wooden']={propertyName:'watchedRepositories',low:5,high:50,format:format};options['bronze']={propertyName:'watchedRepositories',low:50,high:100,format:format};options['silver']={propertyName:'watchedRepositories',low:100,high:500,format:format};options['golden']={propertyName:'watchedRepositories',low:500,format:format};criteria.applyForBadge(info,context,options);}}})();function Follower(){}
Follower.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(following){return'Following '+following+' repositories';}
options.badge='Follower';options['wooden']={propertyName:'following',low:5,high:10,format:format};options['bronze']={propertyName:'following',low:10,high:50,format:format};options['silver']={propertyName:'following',low:50,high:100,format:format};options['golden']={propertyName:'following',low:100,format:format};criteria.applyForBadge(info,context,options);}}})();function Celebrity(){}
Celebrity.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(followed){return'Followed by '+followed+' developers';}
options.badge='Celebrity';options['wooden']={propertyName:'followed',low:5,high:10,format:format};options['bronze']={propertyName:'followed',low:10,high:100,format:format};options['silver']={propertyName:'followed',low:100,high:500,format:format};options['golden']={propertyName:'followed',low:500,format:format};criteria.applyForBadge(info,context,options);}}})();function Contributor(){}
Contributor.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(forked){return'Forked '+forked+' repositories';}
options.badge='Contributor';options['wooden']={propertyName:'forked',low:5,high:10,format:format};options['bronze']={propertyName:'forked',low:10,high:20,format:format};options['silver']={propertyName:'forked',low:20,high:30,format:format};options['golden']={propertyName:'forked',low:30,format:format};criteria.applyForBadge(info,context,options);}}})();function Creator(){}
Creator.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(watchers){return'Some repository watched by '+watchers+' developers';}
options.badge='Creator';options['wooden']={propertyName:'watchers',low:5,high:10,format:format};options['bronze']={propertyName:'watchers',low:10,high:100,format:format};options['silver']={propertyName:'watchers',low:100,high:1000,format:format};options['golden']={propertyName:'watchers',low:1000,format:format};criteria.applyForBadge(info,context,options);}}})();function Coder(){}
Coder.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(repositories){return'Have created '+repositories+' repositories';}
options.badge='Coder';options['wooden']={propertyName:'repositories',low:5,high:10,format:format};options['bronze']={propertyName:'repositories',low:10,high:50,format:format};options['silver']={propertyName:'repositories',low:50,high:100,format:format};options['golden']={propertyName:'repositories',low:100,format:format};criteria.applyForBadge(info,context,options);}}})();function Bureaucrat(){}
Bureaucrat.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(issues){return'Some repository contains '+issues+' issues';}
options.badge='Bureaucrat';options['wooden']={propertyName:'issues',low:5,high:10,format:format};options['bronze']={propertyName:'issues',low:10,high:100,format:format};options['silver']={propertyName:'issues',low:100,high:1000,format:format};options['golden']={propertyName:'issues',low:1000,format:format};criteria.applyForBadge(info,context,options);}}})();function Writer(){}
Writer.prototype=(function(){return{applyForBadge:function(info,context){var criteria=new Criteria();var options=[];var format=function(gists){return'Have created '+gists+' gists';}
options.badge='Writer';options['wooden']={propertyName:'gists',low:10,high:50,format:format};options['bronze']={propertyName:'gists',low:50,high:100,format:format};options['silver']={propertyName:'gists',low:100,high:1000,format:format};options['golden']={propertyName:'gists',low:1000,format:format};criteria.applyForBadge(info,context,options);}}})();$(function(){var badges=[new Watcher(),new Follower(),new Celebrity(),new Contributor(),new Creator(),new Coder(),new Bureaucrat(),new Writer()];function startProgress(account){$('#box').fadeOut('slow',function(){showBadges(account);});}
function showBadges(account){$('#loading').show();var github=new GitHub();var callback=function(d){$('#loading').hide();var context={badges:[]};$.each(badges,function(i,badge){badge.applyForBadge(d,context);});var summary={toString:function(){return'You have earned: '
+(this['golden']||0)+' golden, '+(this['silver']||0)+' silver, '+(this['bronze']||0)+' bronze and '+(this['wooden']||0)+' wooden badges';}};var showNextBadge=function(current){if(current==context.badges.length){if(current==0){$('.badges').append('<span class="info">Your github activity is very low. You earned nothing, keep up good work!</span>');return;}
var summaryText=summary.toString();var $earnings=$('<span class="earnings">'+summaryText+'</span>').hide();$earnings.append(' <a href="http://twitter.com/share" class="twitter-share-button" data-text="'+summaryText+'" data-count="none" data-via="ghbadges" data-related="alexbeletsky">Tweet</a><script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>');$('.badges').append($earnings);$earnings.fadeIn('slow');return;}
var badge=context.badges[current];var type=badge.type,name=badge.name,info=badge.info;collectSummary(summary,type);var $badge=$('<div class="badge"><div title="'+type+' badge" class="body '+type+'-outline"><h2>'+name+'</h2><p>'+info+'</p></div></div>').hide();$('.badges').append($badge);$badge.fadeIn('slow',function(){showNextBadge(++current)});}
$('.badges').show();showNextBadge(0);}
var collectSummary=function(summary,type){if(summary[type]==undefined){summary[type]=0;}
summary[type]++;}
var error=function(){$('#loading').hide();$('.badges').show();$('.badges').append('<span class="error">Sorry, but it looks like user with such account does not exists...</span>');}
location.hash=account;github.init(account,callback,error);}
$('.badges').hide().empty();$('.border').css('background','#004d69');$('button.submit').bind('click',function(){var account=$('#github-account').val().trim();if(account!=''){setTimeout(startProgress(account),200);}
event.preventDefault();});$('#github-account').live('keyup',function(event){var account=$('#github-account').val().trim();if(account!=''&&event.keyCode==13){setTimeout(startProgress(account),200);}
event.preventDefault();});if(location.hash){$('#box').hide();startProgress(location.hash.substr(1));}});
